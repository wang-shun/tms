<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd   
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-autowire="byName">

	<!-- 扫描classpath的包下的所有类，该包路径下的类可以不需要配置bean了 <context:component-scan base-package="com.yiya.action,com.hoperun.framework.action,com.test.controller" 
		/> -->

	<context:component-scan base-package="com.hoperun">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!--<context:component-scan base-package="com"> <context:include-filter 
		type="annotation" expression="org.springframework.stereotype.Controller" 
		/> </context:component-scan> -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Configures Handler Interceptors -->
	<mvc:interceptors>
		<!-- Changes the locale when a 'locale' request parameter is sent; e.g. 
			/?locale=de <bean class="com.hoperun.framework.interceptor.AuthInterceptor" 
			/> <bean class="com.hoperun.framework.interceptor.ExceptionInterceptor" /> -->
		<bean class="com.hoperun.framework.interceptor.SessionInterceptor" />
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />

	</mvc:interceptors>

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="40960" />
	</bean>
	<!-- <bean class="com.test.controller.CustomCommonsMultipartResolver" id="multipartResolver"> 
		<property value="utf-8" name="defaultEncoding" /> <property value="91457280" 
		name="maxUploadSize" /> <property value="40960" name="maxInMemorySize" /> 
		</bean> -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/images/**" location="/images/" />

	<!-- Saves a locale change using a cookie -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<!-- Application Message Bundle -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages/messages" />
		<property name="cacheSeconds" value="0" />
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views 
		directory -->

	<!-- 视图解析器，根据视图的名称new ModelAndView(name)，在配置文件查找对应的bean配置 -->

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 总错误处理 -->
	<bean id="exceptionResolver" class="com.hoperun.framework.exception.CustomExceptionHandler" />
</beans>
